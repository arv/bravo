diff --git a/content/content_shell.gypi b/content/content_shell.gypi
index 85a88c4..abade85 100644
--- a/content/content_shell.gypi
+++ b/content/content_shell.gypi
@@ -41,6 +41,7 @@
         'content_resources.gyp:content_resources',
         '../base/base.gyp:base',
         '../base/third_party/dynamic_annotations/dynamic_annotations.gyp:dynamic_annotations',
+        '../bravo/bravo.gyp:bravo_plugin',
         '../ipc/ipc.gyp:ipc',
         '../media/media.gyp:media',
         '../net/net.gyp:net',
diff --git a/content/shell/common/shell_content_client.cc b/content/shell/common/shell_content_client.cc
index 495ad85..dfaac3e 100644
--- a/content/shell/common/shell_content_client.cc
+++ b/content/shell/common/shell_content_client.cc
@@ -7,7 +7,9 @@
 #include "base/command_line.h"
 #include "base/strings/string_piece.h"
 #include "base/strings/utf_string_conversions.h"
+#include "bravo/plugin/module.h"
 #include "content/public/common/content_switches.h"
+#include "content/public/common/pepper_plugin_info.h"
 #include "content/shell/common/shell_switches.h"
 #include "grit/shell_resources.h"
 #include "grit/webkit_resources.h"
@@ -18,9 +20,37 @@
 
 namespace content {
 
+namespace {
+
+PepperPluginInfo BravoPluginInfo() {
+  PepperPluginInfo::EntryPoints entry_points;
+  entry_points.get_interface = bravo::Module::PPP_GetInterface;
+  entry_points.initialize_module = bravo::Module::PPP_InitializeModule;
+
+  PepperPluginInfo info;
+  info.is_internal = true;
+  info.is_out_of_process = true;
+  info.path = base::FilePath(FILE_PATH_LITERAL("internal-bravo"));
+  info.internal_entry_points = entry_points;
+  info.mime_types.push_back(WebPluginMimeType(
+      bravo::Module::kMimeType,
+      bravo::Module::kMimeExtension,
+      bravo::Module::kMimeDescription));
+  info.permissions = bravo::Module::kPermissions;
+
+  return info;
+}
+
+}
+
 ShellContentClient::~ShellContentClient() {
 }
 
+void ShellContentClient::AddPepperPlugins(
+  std::vector<content::PepperPluginInfo>* plugins) {
+  plugins->push_back(BravoPluginInfo());
+}
+
 std::string ShellContentClient::GetUserAgent() const {
   std::string product = "Chrome/" CONTENT_SHELL_VERSION;
   CommandLine* command_line = CommandLine::ForCurrentProcess();
diff --git a/content/shell/common/shell_content_client.h b/content/shell/common/shell_content_client.h
index 84a1483..1c73ff6 100644
--- a/content/shell/common/shell_content_client.h
+++ b/content/shell/common/shell_content_client.h
@@ -17,6 +17,8 @@ class ShellContentClient : public ContentClient {
  public:
   virtual ~ShellContentClient();
 
+  virtual void AddPepperPlugins(
+      std::vector<content::PepperPluginInfo>* plugins) OVERRIDE;
   virtual std::string GetUserAgent() const OVERRIDE;
   virtual string16 GetLocalizedString(int message_id) const OVERRIDE;
   virtual base::StringPiece GetDataResource(
